//******************************************************************
// 
//  Generated by RoboCompDSL
//  
//  File name: JointMotorSimple.ice
//  Source: JointMotorSimple.idsl
//
//******************************************************************
#ifndef ROBOCOMPJOINTMOTORSIMPLE_ICE
#define ROBOCOMPJOINTMOTORSIMPLE_ICE
module RoboCompJointMotorSimple
{
	exception HardwareFailedException{
	                string  what;
	        };
	exception OutOfRangeException{
	                string  what;
	        };
	exception UnknownMotorException{
	                string  what;
	        };
	struct MotorState
	{
		float pos;
		float vel;
		float power;
		string timeStamp;
		int p;
		int v;
		bool isMoving;
		int temperature;
	};
	struct MotorParams
	{
		string name;
		byte busId;
		float minPos;
		float maxPos;
		float maxVelocity;
		float zeroPos;
		float stepsRange;
		float maxDegrees;
		bool invertedSign;
		float offset;
		float unitsRange;
	};
	struct MotorGoalPosition
	{
		float position;
		float maxSpeed;
	};
	struct MotorGoalVelocity
	{
		float velocity;
		float maxAcc;
	};
	interface JointMotorSimple
	{
		MotorParams getMotorParams (string motor) throws UnknownMotorException;
		MotorState getMotorState (string motor) throws UnknownMotorException;
		void setPosition (string name, MotorGoalPosition goal) throws UnknownMotorException,HardwareFailedException;
		void setVelocity (string name, MotorGoalVelocity goal) throws UnknownMotorException,HardwareFailedException;
		void setZeroPos (string name) throws UnknownMotorException,HardwareFailedException;
	};
};

#endif
